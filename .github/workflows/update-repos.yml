name: Atualizar Dados de Repositórios

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  atualizar:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Instalar dependências
        run: sudo apt-get update && sudo apt-get install -y jq bc

      - name: Buscar repositórios
        run: |
          echo "Buscando repositórios..."
          curl -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/WesleyS08/repos?per_page=100" \
               > repos.json
          
          total_repos=$(jq -r 'length' repos.json)
          echo "Total de repositórios: $total_repos"

      - name: Debug - Mostrar conteúdo de repos.json
        run: cat repos.json

      - name: Processar linguagens
        run: |
          set -euo pipefail
          echo "Iniciando processamento de linguagens..."

          declare -A lang_bytes=()
          total_bytes=0
          processed=0
          errors=0
          total_repos=$(jq -r 'length' repos.json)

          repos=$(jq -r '.[].name' repos.json)
          echo "Repositórios para processar: $total_repos"

          for repo in $repos; do
            if [[ -z "$repo" ]]; then
              echo "Pulando repositório inválido: $repo"
              continue
            fi

            echo "Processando repositório: $repo"

            lang_data=""
            success=0
            for attempt in {1..5}; do
              lang_data=$(curl --max-time 20 -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
                                -H "Accept: application/vnd.github.v3+json" \
                                "https://api.github.com/repos/WesleyS08/$repo/languages") || true
              if jq -e . >/dev/null 2>&1 <<<"$lang_data"; then
                success=1
                break
              fi
              echo "Erro ao buscar dados para $repo. Tentativa $attempt de 5..."
              sleep $((attempt * 10))
            done

            if [[ $success -eq 0 ]]; then
              echo "Falha crítica ao consultar a API para $repo."
              errors=$((errors + 1))
              continue
            fi

            lang_count=$(jq -r 'length' <<< "$lang_data")
            if [ "$lang_count" -eq 0 ]; then
              echo "Nenhum dado de linguagem para $repo. Pulando..."
              continue
            fi

            processed=$((processed + 1))

            while IFS=$'\t' read -r lang bytes; do
              if [[ -n "$lang" && "$bytes" =~ ^[0-9]+$ ]]; then
                lang_bytes[$lang]=$(( ${lang_bytes[$lang]:-0} + bytes ))
                total_bytes=$((total_bytes + bytes))
              fi
            done <<< "$(jq -r 'to_entries[] | "\(.key)\t\(.value)"' <<< "$lang_data")"
          done

          echo "Processamento concluído:"
          echo "- Total de repositórios: $total_repos"
          echo "- Repositórios processados: $processed"
          echo "- Erros encontrados: $errors"
          echo "- Bytes totais contabilizados: $total_bytes"
          echo "- Linguagens únicas identificadas: ${#lang_bytes[@]}"

          if [ ${#lang_bytes[@]} -eq 0 ] || [ $total_bytes -eq 0 ]; then
            jq -n --argjson total_repos "$total_repos" \
               --argjson processed "$processed" \
               --argjson errors "$errors" \
               '{total_repositories: $total_repos, 
                 processed_repositories: $processed,
                 errors: $errors,
                 languages: {}}' > languages.json
            echo "Aviso: Nenhum dado de linguagem coletado"
          else
            printf '{' > temp_lang.json
            first=1
            for lang in "${!lang_bytes[@]}"; do
              percent=$(echo "scale=2; ${lang_bytes[$lang]} * 100 / $total_bytes" | bc -l)
              if [ $first -eq 0 ]; then
                printf ',' >> temp_lang.json
              fi
              first=0
              printf '"%s": %.2f' "$lang" "$percent" >> temp_lang.json
            done
            printf '}\n' >> temp_lang.json

            jq -n --argjson total_repos "$total_repos" \
                 --argjson processed "$processed" \
                 --argjson errors "$errors" \
                 --slurpfile lang_json temp_lang.json \
                 '{total_repositories: $total_repos, 
                   processed_repositories: $processed,
                   errors: $errors,
                   languages: $lang_json[0]}' > languages.json
            rm temp_lang.json
          fi

          echo "Dados finais:"
          cat languages.json

      - name: Commitar alterações
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add languages.json
          if ! git diff --quiet --exit-code --staged; then
            git commit -m "Atualização automática dos dados de linguagens dos repositórios [skip ci]"
            git push
          else
            echo "Nenhuma mudança para commitar"
          fi

