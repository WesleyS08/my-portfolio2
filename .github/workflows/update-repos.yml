name: Update Repos JSON

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          # Install jq if not already available
          sudo apt-get update && sudo apt-get install -y jq bc

      - name: Fetch repositories
        run: |
          echo "Fetching repositories..."
          curl -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/WesleyS08/repos?per_page=100" \
               > repos.json
          
          echo "First 3 repositories:"
          jq -r '.[0:3] | .[].name' repos.json
          echo "Total repositories: $(jq -r 'length' repos.json)"

      - name: Process languages
        id: languages
        run: |
          echo "Starting language processing..."
          
          # Create empty array if file doesn't exist
          if [ ! -f repos.json ]; then
            echo "[]" > repos.json
          fi

          repos=$(jq -r '.[].name' repos.json)
          declare -A lang_bytes=()
          total_bytes=0
          processed=0
          skipped=0

          echo "Found $(echo "$repos" | wc -l) repositories to process"

          for repo in $repos; do
            # Skip invalid or empty repo names
            if [[ -z "$repo" || "$repo" == "WesleyS08" ]]; then
              echo "Skipping invalid repository: $repo"
              ((skipped++))
              continue
            fi

            echo "Processing $repo..."
            
            # Get languages with error handling
            lang_data=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
                           -H "Accept: application/vnd.github.v3+json" \
                           "https://api.github.com/repos/WesleyS08/$repo/languages" || echo "{}")
            
            # Skip if no language data
            if [ "$(echo "$lang_data" | jq -r 'length')" -eq 0 ]; then
              echo "  No language data found"
              ((skipped++))
              continue
            fi

            ((processed++))
            
            # Process each language
            while read -r lang bytes; do
              if [[ -n "$lang" && "$bytes" -gt 0 ]]; then
                current=${lang_bytes[$lang]:-0}
                lang_bytes[$lang]=$((current + bytes))
                total_bytes=$((total_bytes + bytes))
              fi
            done < <(echo "$lang_data" | jq -r 'to_entries[] | "\(.key) \(.value)"')
          done

          echo "Processing complete:"
          echo "- Processed: $processed repositories"
          echo "- Skipped: $skipped repositories"
          echo "- Total bytes: $total_bytes"
          echo "- Languages found: ${#lang_bytes[@]}"

          # Generate JSON output
          if [ ${#lang_bytes[@]} -eq 0 ]; then
            echo "{}" > languages.json
            echo "No language data to output"
            exit 0
          fi

          echo "{" > languages.json
          first=true
          for lang in $(printf '%s\n' "${!lang_bytes[@]}" | sort); do
            percent=$(echo "scale=2; ${lang_bytes[$lang]} * 100 / $total_bytes" | bc)
            if [ "$first" = false ]; then
              echo "," >> languages.json
            fi
            echo -n "\"$lang\": $percent" >> languages.json
            first=false
          done
          echo -e "\n}" >> languages.json

          echo "Language percentages:"
          cat languages.json

      - name: Commit changes
        if: always()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git add repos.json languages.json || echo "No files to add"
          git diff --quiet && git diff --staged --quiet || \
            git commit -m "Update repository data [skip ci]" && \
            git push
