name: Atualizar Dados de Repositórios

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  atualizar:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Instalar dependências
        run: sudo apt-get update && sudo apt-get install -y jq bc

      - name: Buscar repositórios
        run: |
          echo "Buscando repositórios..."
          curl -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/WesleyS08/repos?per_page=100" \
               > repos.json
          
          echo "Total de repositórios: $(jq -r 'length' repos.json)"

      - name: Processar linguagens
        run: |
          # Modo debug desligado inicialmente
          set +x
          echo "Iniciando processamento de linguagens..."
          
          # Variáveis
          declare -A lang_bytes=()
          total_bytes=0
          processed=0
          errors=0

          # Ler nomes dos repositórios
          repos=$(jq -r '.[].name' repos.json)
          echo "Repositórios para processar: $(echo "$repos" | wc -l)"

          # Ativar debug apenas para o loop principal
          set -x
          for repo in $repos; do
            # Pular nomes inválidos
            if [[ -z "$repo" || "$repo" == "WesleyS08" ]]; then
              echo "Pulando repositório inválido: $repo"
              continue
            fi

            echo "Processando $repo..."
            
            # Obter dados de linguagem
            lang_data=$(curl -f -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" \
                           -H "Accept: application/vnd.github.v3+json" \
                           "https://api.github.com/repos/WesleyS08/$repo/languages" || echo "{}")
            
            # Verificar JSON válido (com debug desligado temporariamente)
            set +x
            if ! jq -e . >/dev/null 2>&1 <<<"$lang_data"; then
              echo "  JSON inválido para $repo"
              ((errors++))
              set -x
              continue
            fi

            # Verificar se há dados de linguagem
            lang_count=$(echo "$lang_data" | jq -r 'length')
            if [ "$lang_count" -eq 0 ]; then
              echo "  Sem dados de linguagem"
              set -x
              continue
            fi

            ((processed++))
            
            # Processar linguagens
            while read -r lang bytes; do
              if [[ -n "$lang" && "$bytes" =~ ^[0-9]+$ && "$bytes" -gt 0 ]]; then
                lang_bytes[$lang]=$((${lang_bytes[$lang]:-0} + bytes))
                total_bytes=$((total_bytes + bytes))
              fi
            done < <(echo "$lang_data" | jq -r 'to_entries[] | "\(.key) \(.value)"')
            set -x
          done

          # Resultados finais
          set +x
          echo "Processamento completo:"
          echo "- Repositórios processados: $processed"
          echo "- Erros encontrados: $errors"
          echo "- Bytes totais: $total_bytes"
          echo "- Linguagens únicas: ${#lang_bytes[@]}"

          # Gerar arquivo de saída
          if [ ${#lang_bytes[@]} -eq 0 ]; then
            echo "{}" > languages.json
            echo "Aviso: Nenhum dado de linguagem coletado"
          else
            echo "{" > languages.json
            first=true
            for lang in $(printf '%s\n' "${!lang_bytes[@]}" | sort); do
              percent=$(echo "scale=2; ${lang_bytes[$lang]} * 100 / $total_bytes" | bc)
              if [ "$first" = false ]; then
                echo "," >> languages.json
              fi
              echo -n "\"$lang\": $percent" >> languages.json
              first=false
            done
            echo -e "\n}" >> languages.json
          fi

          echo "Distribuição final de linguagens:"
          cat languages.json

      - name: Commitar alterações
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Commitar apenas se houver mudanças
          git add repos.json languages.json
          if ! git diff --quiet --exit-code --staged; then
            git commit -m "Atualizar dados de repositórios [skip ci]"
            git push
          else
            echo "Nenhuma mudança para commitar"
          fi
